library(datasets)  # Load built-in datasets
head(iris)         # Show the first six lines of iris data
summary(iris)      # Summary statistics for iris data
plot(iris)         # Scatterplot matrix for iris data
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
# I recommend "pacman" for managing add-on packages. It will
# install packages, if needed, and then load the packages.
install.packages("pacman")
# Then load the package by using either of the following:
require(pacman)  # Gives a confirmation message.
# Or, by using "pacman::p_load" you can use the p_load
# function from pacman without actually loading pacman.
# These are packages I load every time.
pacman::p_load(pacman, dplyr, GGally, ggplot2, ggthemes,
ggvis, httr, lubridate, plotly, rio, rmarkdown, shiny,
stringr, tidyr)
p_unload(all)  # Easier: clears all add-ons
detach("package:datasets", unload = TRUE)  # For base
detach("package:datasets", unload = TRUE)  # For base
detach("package:datasets", unload = TRUE)  # For base
detach("package:datasets", unload = TRUE)  # For base
library(datasets)  # Load/unload base packages manually
head(iris)
?plot  # Help for plot()
plot(iris$Species)  # Categorical variable
plot(iris$Petal.Length)  # Quantitative variable
plot(iris$Species, iris$Petal.Width)  # Cat x quant
plot(iris$Petal.Length, iris$Petal.Width)  # Quant pair
plot(iris)  # Entire data frame
# Plot with options
plot(iris$Petal.Length, iris$Petal.Width,
col = "#cc0000",  # Hex code for datalab.cc red
pch = 19,         # Use solid circles for points
main = "Iris: Petal Length vs. Petal Width",
xlab = "Petal Length",
ylab = "Petal Width")
plot(cos, 0, 2*pi)
plot(exp, 1, 5)
plot(dnorm, -3, +3)
# Formula plot with options
plot(dnorm, -3, +3,
col = "#cc0000",
lwd = 5,
main = "Standard Normal Distribution",
xlab = "z-scores",
ylab = "Density")
# Clear packages
detach("package:datasets", unload = TRUE)
# Clear plots
dev.off()  # But only if there IS a plot
library(datasets)
?mtcars
head(mtcars)
barplot(mtcars$cyl)             # Doesn't work
# Need a table with frequencies for each category
cylinders <- table(mtcars$cyl)  # Create table
barplot(cylinders)              # Bar chart
plot(cylinders)                 # Default X-Y plot (lines)
# Clear environment
rm(list = ls())
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
library(datasets)
?iris
head(iris)
hist(iris$Sepal.Length)
hist(iris$Sepal.Width)
hist(iris$Petal.Length)
hist(iris$Petal.Width)
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Length [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Clear plots
dev.off()  # But only if there IS a plot
# Put graphs in 3 rows and 1 column
par(mfrow = c(3, 1))
# Histograms for each species using options
hist(iris$Petal.Width [iris$Species == "setosa"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Setosa",
xlab = "",
col = "red")
hist(iris$Petal.Width [iris$Species == "versicolor"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Versicolor",
xlab = "",
col = "purple")
hist(iris$Petal.Width [iris$Species == "virginica"],
xlim = c(0, 3),
breaks = 9,
main = "Petal Width for Virginica",
xlab = "",
col = "blue")
# Restore graphic parameter
par(mfrow=c(1, 1))
# Clear packages
detach("package:datasets", unload = TRUE)  # For base
# Clear plots
dev.off()  # But only if there IS a plot
# Clear console
cat("\014")  # ctrl+L
getwkd()
getwd()
cd
cd ()
source("~/Documents/Tölfræði/Vika1/Problem 1.2.10 4th edition.R")
getwd()
data = read.table("prob1.2.10_data.csv")
getwd()
data = read.table("prob1.2.10_data.csv")
getwd()
data = read.table("prob1.2.10_data.csv")
data = read.table("prob1.2.10_data.csv")
getwd()
setwd(./Documents/Tölfræði/Vika1)
setwd(logisigurdarson/Documents/Tölfræði/Vika1)
setwd(~/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(~logisigurdarson/Documents/Tölfræði/Vika1)
data = read.table("prob1.2.10_data.csv")
getwd()
setwd(Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(/Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(./Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(~/Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(~/Documents/Tölfræði/Vika1)
setwd(/Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(C:/Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd(C:Users/logisigurdarson/Documents/Tölfræði/Vika1)
getwd()
setwd(C:Users/logisigurdarson/Documents/Tölfræði/Vika1)
setwd("Users/logisigurdarson/Documents/Tölfræði/Vika1")
setwd("/Users/logisigurdarson/Documents/Tölfræði/Vika1")
getwd()
data = read.table("prob1.2.10_data.csv")
View(data)
data
x = data$V1
x
mean(x)
std(x)
sd(x)
median(x)
summary(x)
q()
data = read.table("ex1-2-10.csv", header=T)
setwd("~/Documents/Tölfræði/datasets/Ch1/")
data = read.table("ex1-2-10.csv", header=T)
data
data = read.csv("ex1-2-10.csv", header=T)
data
mean(data)
x
x = data$Occupants
x
detach(x)
y = data$Number.of.Cars
mean(x,y)
plot(x,y)
plot(y,x)
plot(x,y)
summary(x,y)
summary(y,x)
matrix = x * y
summary(matrix)
attach(data)
data
colMeans(data)
rm(x)
rm(y)
rm(matrix)
x = 0
count = 0
for (i in data$Number.of.Cars) {
for (j in 1:i) {x[j] = data$Occupants[count]}
count++
}
for (i in data$Number.of.Cars) {
for (j in 1:i) {x[j] = data$Occupants[count]}
count = count + 1
}
x=0;for (i in data$Number.of.Cars) {
for (j in 1:i) {x[j] = data$Occupants[count]}
count = count + 1
}
x = []
x = list()
for (i in data$Number.of.Cars) {
for (j in 1:i) {x.append(data$Occupants[count])}
count = count + 1
}
x = list(0*100)
x = list(0) * 100
x = 0
n = 6; d = 25/n; x = 0; for(i in 1:n+1) {x[i] = (i-1)*d}
rm(x)
rm(n)
rm(d)
rm(i)
rm(j)
for (i in data$Number.of.Cars) {
for (j in 1:i) {x[j] = data$Occupants[count]}
count = count + 1
}
data
for (j in 1:i) {x[j] = data$Occupants[count]}
x = 0
for (j in 1:i) {x[j] = data$Occupants[count]}
x = c()
for (i in data$Number.of.Cars) {
for (j in 1:i) {append(x,data$Occupants[count])}
count = count + 1
}
for (i in data$Number.of.Cars) {
for (j in 1:i) {append(x,data$Occupants[count])}
count = count + 1
}
for (i in data$Number.of.Cars) {
for (j in 1:i) {append(x,data$Occupants[count])}
count = count + 1
}
rm(count)
x = c(1)
for (i in data$Number.of.Cars) {
for (j in 1:i) {append(x,data$Occupants[count])}
count = count + 1
}
for (j in 1:i) {append(x,data$Occupants[count])}
for (i in data$Number.of.Cars) {
for (j in 1:i) {append(x,data$Occupants[count])}
count = count + 1
}
rm(i)
rm(j)
rm(x)
totalCars = sum(data$Number.of.Cars)
matrix(data$Occupants, data$Number.of.Cars)
matrix(data$Number.of.Cars, data$Occupants, )
matrix(data$Occupants, data$Number.of.Cars)
matrix(data$Occupants)
occupants = matrix(data$Occupants)
cars = matrix(data$Number.of.Cars)
total = cars * occupants
View(occupants)
total = occupants * cars
View(cars)
rm (cars)
rm(occupants)
rm(total)
rm(totalCars)
help( )
describe(data)
colMeans(data)
totalOccupants = sum(data$Occupants)
totalOccupants = data$Occupants * data$Number.of.Cars
totalOccupants = sum(data$Occupants * data$Number.of.Cars)
totalCars = sum(data$Number.of.Cars)
mean = totalOccupants/totalCars
standardDev = sd(data$Occupants * data$Number.of.Cars)
standardDev = sd(data$Occupants * data$Number.of.Cars) * 5 / 100
data
data.fram(data$Occupants,data$Number.of.Cars)
data.frame(data$Occupants,data$Number.of.Cars)
data.frame(data$Number.of.Cars, data$Occupants)
summary(data)
cbind(data$Occupants,data$Number.of.Cars)
rbind(data$Occupants,data$Number.of.Cars)
cbind(data$Number.of.Cars,data$Occupants)
getwd()
data = read.table("table1-2.csv")
data
mean(data)
data = read.table("table1-2.csv", head = T)
mean(data)
data
rm(mean)
rm(standardDev)
rm(totalCars)
rm(totalOccupants)
View(data)
View(data)
mean(data)
sd(data)
x = data$PM
mean(x)
median(x)
sd(x)
hist(x)
boxplot(x)
boxplot(x, 5)
hist(x, breaks = 4)
hist(x, breaks = 6)
hist(x, breaks = 100)
hist(x, breaks = 8)
hist(x, breaks = 7)
hist(x, breaks = seq(0,25, l=4))
hist(x, breaks = seq(0,25, l=6))
hist(x, breaks = seq(0,25, l=8))
hist(x, breaks = seq(0,25, l=9))
hist(x, breaks = seq(0,25, l=8))
hist(x, breaks = seq(0,25, l=9))
hist(x, breaks = seq(0,25, l=5))
hist(x, breaks = seq(0,25, l=7))
n = 6; d = 25/n; x = 0; for(i in 1:n+1) {x[i] = (i-1)*d}
hist(PM, breaks = x)
x
hist(PM, breaks = x)
data = read.table("table1-2.csv", header=T)
data
hist(PM, breaks = 5)
detach(data)
q()
rm(d)
rm(i)
rm(n)
rm(x)
hist(x, breaks = seq(0,25, l=7))
data = read.table("table1-2.csv", head = T)
data
mean(x)
x = data$PM
mean(x)
median(x)
sd(x)
hist(x, breaks = seq(0,25, l=7))
PM = data$PM
rm(x)
n = 6; d = 25/n; x = 0; for(i in 1:n+1) {x[i] = (i-1)*d}
hist(PM, breaks = x)
n = 8; d = 25/n; x = 0; for(i in 1:n+1) {x[i] = (i-1)*d}
hist(PM, breaks = x)
rm(d)
rm(i)
rm(x)
rm(n)
rm(PM)
hist(x, breaks = seq(0,25, l=7))
hist(x, breaks = seq(0,25, l=7))
x = data$PM
hist(x, breaks = seq(0,25, l=7))
boxplot(x)
hist(x, breaks = seq(0,25, l=7))
hist(x, breaks = seq(0,25, l=5))
hist(x, breaks = seq(0,25, l=9))
